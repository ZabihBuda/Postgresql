# -*- coding: utf-8 -*-
"""Joins and Subqueries

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K_9CFa28-STCCY8PEm-zpkRf3vfwOOwt

# Questions
"""

#How can you produce a list of the start times for bookings by members named 'David Farrell'?

SELECT starttime FROM cd.bookings bks
INNER JOIN cd.members mems
ON mems.memid=bks.memid
WHERE mems.firstname = 'David'
AND mems.surname='Farrell'

#How can you produce a list of the start times for bookings for tennis courts, for the date '2012-09-21'? Return a list of start time and facility name pairings, ordered by the time.
SELECT bks.starttime AS start, fcs.name AS name
FROM cd.facilities fcs
INNER JOIN cd.bookings bks
ON bks.facid=fcs.facid
WHERE bks.starttime >= '2012-09-21'
AND bks.starttime < '2012-09-22'
AND fcs.name IN ('Tennis Court 1', 'Tennis Court 2')
ORDER BY bks.startTime

#How can you output a list of all members who have recommended another member? Ensure that there are no duplicates in the list, and that results are ordered by (surname, firstname).
SELECT DISTINCT recs.firstname AS firstname, recs.surname AS surname
FROM cd.members mems
INNER JOIN cd.members recs
ON recs.memid=mems.recommendedby
ORDER BY surname, firstname

#How can you output a list of all members, including the individual who recommended them (if any)? Ensure that results are ordered by (surname, firstname).
SELECT mems.firstname AS memfname, mems.surname AS memsname, recs.firstname AS recfname, recs.surname AS recsname
FROM cd.members mems
LEFT OUTER JOIN cd.members recs
ON mems.recommendedby=recs.memid
ORDER BY memsname, memfname

#How can you produce a list of all members who have used a tennis court? Include in your output the name of the court, and the name of the member formatted as a single column. Ensure no duplicate data, and order by the member name followed by the facility name.
SELECT mems.firstname || ' ' || mems.surname AS member, fcs.name AS facility
FROM cd.members mems
INNER JOIN cd.bookings bks
ON bks.memid=mems.memid
INNER JOIN cd.facilities fcs
ON fcs.facid=bks.facid
WHERE fcs.name IN ('Tennis Court 1', 'Tennis Court 2')
GROUP BY member, facility
ORDER BY member, facility

#How can you produce a list of bookings on the day of 2012-09-14 which will cost the member (or guest) more than $30? Remember that guests have different costs to members (the listed costs are per half-hour 'slot'), and the guest user is always ID 0. Include in your output the name of the facility, the name of the member formatted as a single column, and the cost. Order by descending cost, and do not use any subqueries.
SELECT mems.firstname || ' ' || mems.surname AS member, fcs.name AS facility, 
		CASE WHEN mems.memid=0 THEN bks.slots*fcs.guestcost
			 ELSE bks.slots*fcs.membercost
		END AS cost
FROM cd.members mems
INNER JOIN cd.bookings bks
ON bks.memid=mems.memid
INNER JOIN cd.facilities fcs
ON fcs.facid=bks.facid
WHERE bks.starttime >= '2012-09-14'
AND bks.starttime < '2012-09-15'
AND ((mems.memid = 0 AND bks.slots*fcs.guestcost>30) OR
	 (mems.memid != 0 AND bks.slots*fcs.membercost>30)
	)
ORDER BY cost DESC

#second method: 
select member, facility, cost from (
	select 
		mems.firstname || ' ' || mems.surname as member,
		facs.name as facility,
		case
			when mems.memid = 0 then
				bks.slots*facs.guestcost
			else
				bks.slots*facs.membercost
		end as cost
		from
			cd.members mems
			inner join cd.bookings bks
				on mems.memid = bks.memid
			inner join cd.facilities facs
				on bks.facid = facs.facid
		where
			bks.starttime >= '2012-09-14' and
			bks.starttime < '2012-09-15'
	) as bookings
	where cost > 30
order by cost desc;

#How can you output a list of all members, including the individual who recommended them (if any), without using any joins? Ensure that there are no duplicates in the list, and that each firstname + surname pairing is formatted as a column and ordered.
SELECT DISTINCT mems.firstname || ' ' || mems.surname AS members, 
	(SELECT recs.firstname || ' ' || recs.surname AS recommender
	 FROM cd.members recs
	 WHERE mems.recommendedby=recs.memid)
FROM cd.members mems
ORDER BY members, recommender